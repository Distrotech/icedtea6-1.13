# HG changeset patch
# User mchung
# Date 1368544028 25200
#      Tue May 14 08:07:08 2013 -0700
# Node ID e3eae7996a478cd07125110456836a42c8a504c6
# Parent  d4fca2113b280a7db03b67caae22e0ceafb51b89
8010727: WLS fails to add a logger with "" in its own LogManager subclass instance
Reviewed-by: alanb, jgish

diff -r d4fca2113b28 -r e3eae7996a47 src/share/classes/java/util/logging/LogManager.java
--- openjdk/jdk/src/share/classes/java/util/logging/LogManager.java	Fri Oct 25 17:51:03 2013 +0100
+++ openjdk/jdk/src/share/classes/java/util/logging/LogManager.java	Tue May 14 08:07:08 2013 -0700
@@ -486,7 +486,7 @@
         }
 
         synchronized void ensureRootLogger(Logger logger) {
-            if (logger == manager.rootLogger)
+            if (logger.getName().isEmpty())
                 return;
 
             // during initialization, rootLogger is null when
diff -r d4fca2113b28 -r e3eae7996a47 test/java/util/logging/LogManagerInstanceTest.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ openjdk/jdk/test/java/util/logging/LogManagerInstanceTest.java	Tue May 14 08:07:08 2013 -0700
@@ -0,0 +1,76 @@
+/*
+ * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+import java.util.logging.*;
+
+/*
+ * @test
+ * @bug 8010727
+ * @summary  LogManager.addLogger should succeed to add a logger named ""
+ *           if LogManager.getLogger("") returns null.
+ *
+ * @run main LogManagerInstanceTest
+ */
+
+public class LogManagerInstanceTest {
+    public static void main(String[] argv) {
+        LogManager mgr = LogManager.getLogManager();
+        if (getRootLogger(mgr) == null) {
+            throw new RuntimeException("Root logger not exist");
+        }
+
+        SecondLogManager mgr2 = new SecondLogManager();
+        Logger root = getRootLogger(mgr2);
+        if (mgr2.base != root) {
+            throw new RuntimeException(mgr2.base + " is not the root logger");
+        }
+    }
+
+    private static Logger getRootLogger(LogManager mgr) {
+        Logger l = mgr.getLogger("");
+        if (l != null && !l.getName().isEmpty()) {
+            throw new RuntimeException(l.getName() + " is not an invalid root logger");
+        }
+        return l;
+    }
+
+    static class SecondLogManager extends LogManager {
+        final Logger base;
+        private SecondLogManager() {
+            Logger root = getLogger("");
+            if (root == null) {
+                root = new BaseLogger("", null);
+                if (!super.addLogger(root))
+                    throw new RuntimeException("Fail to addLogger " + root);
+            } else {
+                System.out.println("Root logger already exists");
+            }
+            this.base = root;
+        }
+    }
+    static class BaseLogger extends Logger {
+        BaseLogger(String name, String rbname) {
+            super(name, rbname);
+        }
+    }
+}
