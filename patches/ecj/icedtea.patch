diff -Nru openjdk-ecj.orig/corba/make/com/sun/corba/se/Makefile openjdk-ecj/corba/make/com/sun/corba/se/Makefile
--- openjdk-ecj.orig/corba/make/com/sun/corba/se/Makefile	2013-10-04 15:45:38.000000000 +0100
+++ openjdk-ecj/corba/make/com/sun/corba/se/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -42,7 +42,7 @@
 # the rmic iiop backend needs some classes that are part of the impl/util
 # package.  These classes use log wrappers, so they must be built after
 # pept and before rmi.
-SUBDIRS = sources pept corespi core spi impl rmi
+SUBDIRS = org pept corespi core spi impl rmi
 all build clean clobber::
 	$(SUBDIRS-loop)
 
diff -Nru openjdk-ecj.orig/corba/make/com/sun/corba/se/org/Makefile openjdk-ecj/corba/make/com/sun/corba/se/org/Makefile
--- openjdk-ecj.orig/corba/make/com/sun/corba/se/org/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ openjdk-ecj/corba/make/com/sun/corba/se/org/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -0,0 +1,38 @@
+#
+# Copyright 2001-2005 Sun Microsystems, Inc.  All Rights Reserved.
+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+#
+# This code is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License version 2 only, as
+# published by the Free Software Foundation.  Sun designates this
+# particular file as subject to the "Classpath" exception as provided
+# by Sun in the LICENSE file that accompanied this code.
+#
+# This code is distributed in the hope that it will be useful, but WITHOUT
+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+# version 2 for more details (a copy is included in the LICENSE file that
+# accompanied this code).
+#
+# You should have received a copy of the GNU General Public License version
+# 2 along with this work; if not, write to the Free Software Foundation,
+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+#
+# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
+# CA 95054 USA or visit www.sun.com if you need additional information or
+# have any questions.
+#
+
+BUILDDIR = ../../../../..
+PACKAGE = com.sun.corba.se
+PRODUCT = org
+
+include $(BUILDDIR)/common/Defs.gmk
+
+FILES_java=\
+	com/sun/corba/se/org/omg/CORBA/ORB.java
+
+#
+# Include
+#
+include $(BUILDDIR)/common/Classes.gmk
diff -Nru openjdk-ecj.orig/corba/make/com/sun/corba/se/sources/Makefile openjdk-ecj/corba/make/com/sun/corba/se/sources/Makefile
--- openjdk-ecj.orig/corba/make/com/sun/corba/se/sources/Makefile	2013-10-04 15:45:38.000000000 +0100
+++ openjdk-ecj/corba/make/com/sun/corba/se/sources/Makefile	1970-01-01 01:00:00.000000000 +0100
@@ -1,224 +0,0 @@
-#
-# Copyright (c) 2000, 2006, Oracle and/or its affiliates. All rights reserved.
-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
-#
-# This code is free software; you can redistribute it and/or modify it
-# under the terms of the GNU General Public License version 2 only, as
-# published by the Free Software Foundation.  Oracle designates this
-# particular file as subject to the "Classpath" exception as provided
-# by Oracle in the LICENSE file that accompanied this code.
-#
-# This code is distributed in the hope that it will be useful, but WITHOUT
-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-# version 2 for more details (a copy is included in the LICENSE file that
-# accompanied this code).
-#
-# You should have received a copy of the GNU General Public License version
-# 2 along with this work; if not, write to the Free Software Foundation,
-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
-#
-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
-# or visit www.oracle.com if you need additional information or have any
-# questions.
-#
-
-BUILDDIR = ../../../../..
-
-PACKAGE = com.sun.corba.se
-PRODUCT = org
-
-include $(BUILDDIR)/common/Defs.gmk
-
-#
-# Rules
-#
-all: build
-
-build: portableactivation.idl.compile logwrapper.generate logresource.generate 
-
-clean clobber:: portableactivation.idl.clean
-
-#
-# Files
-#
-CORBA_JMK_DIRECTORY=$(TOPDIR)/make/com/sun/corba/minclude/
-include $(CORBA_JMK_DIRECTORY)com_sun_corba_se_PortableActivationIDL.jmk
-include $(CORBA_JMK_DIRECTORY)com_sun_corba_se_impl_logging.jmk
-
-FILES_java += com/sun/corba/se/org/omg/CORBA/ORB.java
-
-#
-# Dirs
-#
-
-SRC_DIR = $(SHARE_SRC)/classes
-CORBA_IDL_DIR = $(SRC_DIR)/org/omg/PortableServer
-PI_IDL_DIR = $(SRC_DIR)/org/omg/PortableInterceptor
-
-ACTIVATIONFILEDIR         = $(GENSRCDIR)/com/sun/corba/se/spi/activation
-PORTABLEACTIVATIONFILEDIR = $(GENSRCDIR)/com/sun/corba/se/PortableActivationIDL
-LOG_GENDIRECTORY          = $(GENSRCDIR)/com/sun/corba/se/impl/logging
-
-#
-# IDLs
-#
-
-ACTIVATION.IDL = $(SRC_DIR)/com/sun/corba/se/spi/activation/activation.idl
-PORTABLEACTIVATION.IDL = $(SRC_DIR)/com/sun/corba/se/PortableActivationIDL/activation.idl
-
-
-#
-# .mc files
-#
-ACTIVATION.MC   = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/Activation.mc
-IOR.MC          = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/IOR.mc
-INTERCEPTORS.MC = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/Interceptors.mc
-NAMING.MC       = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/Naming.mc
-OMG.MC          = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/OMG.mc
-ORBUTIL.MC      = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/ORBUtil.mc
-POA.MC          = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/POA.mc
-UTIL.MC         = $(SRC_DIR)/com/sun/corba/se/spi/logging/data/Util.mc
-
-MC_GENERATE_CLASS = make-class
-MC_GENERATE_LOG_RB = make-resource 
-
-JSCHEME_GENERATE_CLASS = $(BOOT_JAVA_CMD) com.sun.tools.corba.se.logutil.MC $(MC_GENERATE_CLASS) 
-JSCHEME_GENERATE_LOG_RB = $(BOOT_JAVA_CMD) com.sun.tools.corba.se.logutil.MC $(MC_GENERATE_LOG_RB) 
-
-
-#
-# Activation 
-#
-
-ACTIVATIONFILES = $(com_sun_corba_se_spi_activation_java:%=$(GENSRCDIR)/%)
-
-$(ACTIVATIONFILES): $(ACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) -i $(ACTIVATIONFILEDIR) -fall -oldImplBase -pkgPrefix activation com.sun.corba.se.spi $(ACTIVATION.IDL)
-
-activation.idl.compile: $(ACTIVATIONFILES)
-
-activation.idl.clean:
-	$(RM) -f $(ACTIVATIONFILES)
-
-#
-# PortableActivationIDL
-#
-
-PORTABLEACTIVATIONFILES = $(com_sun_corba_se_PortableActivationIDL_java:%=$(GENSRCDIR)/%)
-
-PORTABLEACTIVATION_INCLUDES = -i $(CORBA_IDL_DIR) -i $(PI_IDL_DIR)
-
-PORTABLEACTIVATION_PKG_PREFIXES = -pkgPrefix PortableInterceptor org.omg \
-    -pkgPrefix PortableActivationIDL com.sun.corba.se \
-    -pkgPrefix Dynamic org.omg \
-    -pkgPrefix IOP org.omg
-
-# REVISIT: remove -oldImplBase
-$(PORTABLEACTIVATIONFILES): $(PORTABLEACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) $(PORTABLEACTIVATION_INCLUDES) $(PORTABLEACTIVATION_PKG_PREFIXES) -fall -oldImplBase -corba 3.0 -D CORBA3 $(PORTABLEACTIVATION.IDL)
-
-portableactivation.idl.compile: $(PORTABLEACTIVATIONFILES)
-
-portableactivation.idl.clean:
-	$(RM) -f $(PORTABLEACTIVATIONFILES)
-
-#
-# Generate LogWrapper classes
-#
-logwrapper.generate: \
-	$(LOG_GENDIRECTORY)/ActivationSystemException.java \
-	$(LOG_GENDIRECTORY)/IORSystemException.java \
-	$(LOG_GENDIRECTORY)/InterceptorsSystemException.java \
-	$(LOG_GENDIRECTORY)/NamingSystemException.java \
-	$(LOG_GENDIRECTORY)/OMGSystemException.java \
-	$(LOG_GENDIRECTORY)/ORBUtilSystemException.java \
-	$(LOG_GENDIRECTORY)/POASystemException.java \
-	$(LOG_GENDIRECTORY)/UtilSystemException.java
-
-$(LOG_GENDIRECTORY)/ActivationSystemException.java : $(ACTIVATION.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(ACTIVATION.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/IORSystemException.java : $(IOR.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(IOR.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/InterceptorsSystemException.java : $(INTERCEPTORS.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(INTERCEPTORS.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/NamingSystemException.java : $(NAMING.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(NAMING.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/OMGSystemException.java : $(OMG.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(OMG.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/ORBUtilSystemException.java : $(ORBUTIL.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(ORBUTIL.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/POASystemException.java : $(POA.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(POA.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/UtilSystemException.java : $(UTIL.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_CLASS) $(UTIL.MC) $(LOG_GENDIRECTORY)
-
-logresource.generate: $(LOG_GENDIRECTORY)/LogStrings.properties
-
-$(LOG_GENDIRECTORY)/LogStrings.properties: \
-		$(LOG_GENDIRECTORY)/ActivationSystemException.resource \
-		$(LOG_GENDIRECTORY)/IORSystemException.resource \
-		$(LOG_GENDIRECTORY)/InterceptorsSystemException.resource \
-		$(LOG_GENDIRECTORY)/NamingSystemException.resource \
-		$(LOG_GENDIRECTORY)/OMGSystemException.resource \
-		$(LOG_GENDIRECTORY)/ORBUtilSystemException.resource \
-		$(LOG_GENDIRECTORY)/POASystemException.resource \
-		$(LOG_GENDIRECTORY)/UtilSystemException.resource
-	$(CAT) $(LOG_GENDIRECTORY)/*.resource > $(LOG_GENDIRECTORY)/LogStrings.properties
-
-$(LOG_GENDIRECTORY)/ActivationSystemException.resource : $(ACTIVATION.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(ACTIVATION.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/IORSystemException.resource : $(IOR.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(IOR.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/InterceptorsSystemException.resource : $(INTERCEPTORS.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(INTERCEPTORS.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/NamingSystemException.resource : $(NAMING.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(NAMING.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/OMGSystemException.resource : $(OMG.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(OMG.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/ORBUtilSystemException.resource : $(ORBUTIL.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(ORBUTIL.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/POASystemException.resource : $(POA.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(POA.MC) $(LOG_GENDIRECTORY)
-
-$(LOG_GENDIRECTORY)/UtilSystemException.resource : $(UTIL.MC)
-	$(prep-target)
-	$(JSCHEME_GENERATE_LOG_RB) $(UTIL.MC) $(LOG_GENDIRECTORY)
-
-
-.PHONY: all build clean clobber \
-	activation.idl.compile activation.idl.clean \
-	portableactivation.idl.compile portableactivation.idl.clean
-
-#
-# Include
-#
-include $(BUILDDIR)/common/Rules.gmk
diff -Nru openjdk-ecj.orig/corba/make/common/Defs.gmk openjdk-ecj/corba/make/common/Defs.gmk
--- openjdk-ecj.orig/corba/make/common/Defs.gmk	2013-10-04 15:45:38.000000000 +0100
+++ openjdk-ecj/corba/make/common/Defs.gmk	2013-10-09 12:46:11.374453549 +0100
@@ -53,6 +53,13 @@
 
 _OUTPUTDIR=$(TOPDIR)/build/$(PLATFORM)-$(ARCH)
 
+
+ifdef ALT_LANGTOOLS_DIST
+  LANGTOOLS_DIST :=$(call FullPath,$(ALT_LANGTOOLS_DIST))
+else
+  LANGTOOLS_DIST =
+endif 
+
 #
 # Get platform definitions
 #
@@ -118,8 +125,6 @@
 # for build tool jar files
 BUILDTOOLJARDIR     = $(OUTPUTDIR)/btjars
 ABS_BUILDTOOLJARDIR = $(ABS_OUTPUTDIR)/btjars
-# for generated java source files
-GENSRCDIR           = $(OUTPUTDIR)/gensrc
 # for generated C source files (not javah)
 GENNATIVESRCDIR     = $(OUTPUTDIR)/gennativesrc
 # for imported source files
@@ -220,7 +225,7 @@
 # We define an intermediate variable for Java files because
 # we use its value later to help define $SOURCEPATH
 
-VPATH0.java = $(GENSRCDIR)$(CLASSPATH_SEPARATOR)$(PLATFORM_SRC)/classes$(CLASSPATH_SEPARATOR)$(SHARE_SRC)/classes
+VPATH0.java = $(GENSRCDIR)$(CLASSPATH_SEPARATOR)$(SHARE_SRC)/classes
 VPATH.java = $(VPATH0.java)
 vpath %.java $(VPATH.java)
 vpath %.class $(CLASSBINDIR)
diff -Nru openjdk-ecj.orig/corba/make/common/Defs-linux.gmk openjdk-ecj/corba/make/common/Defs-linux.gmk
--- openjdk-ecj.orig/corba/make/common/Defs-linux.gmk	2013-10-09 12:43:59.208422274 +0100
+++ openjdk-ecj/corba/make/common/Defs-linux.gmk	2013-10-09 12:46:11.374453549 +0100
@@ -271,7 +271,7 @@
 #
 VM_NAME         = server
 JVMLIB          = -L$(BOOTDIR)/jre/lib/$(LIBARCH)/$(VM_NAME) -ljvm
-JAVALIB         = -L$(BOOTDIR)/jre/lib/$(LIBARCH) -ljava $(JVMLIB)
+JAVALIB         = -L$(BOOTDIR)/jre/lib/$(LIBARCH) -L$(dir $(shell $(if $(GCJ),$(GCJ),$(subst gcc,gcj,$(CC))) --print-file-name=libgcj.so)) -lgcj $(JVMLIB)
 
 #
 # We want to privatize JVM symbols on Solaris. This is so the user can
diff -Nru openjdk-ecj.orig/corba/make/org/omg/sources/Makefile openjdk-ecj/corba/make/org/omg/sources/Makefile
--- openjdk-ecj.orig/corba/make/org/omg/sources/Makefile	2013-10-04 15:45:38.000000000 +0100
+++ openjdk-ecj/corba/make/org/omg/sources/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -93,8 +93,6 @@
 POAHELHOLFILES =    $(POA_GENERATED_HELP_HOL_java:%=$(GENSRCDIR)/%)
 
 $(POAGENERATEDFILES):: $(POA.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableServer" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -corba 3.0 -fall -pkgPrefix PortableServer org.omg $(POA.IDL)
-	$(RM) -r $(POAHELHOLFILES)
 
 poa.compile: $(POAGENERATEDFILES)
 
@@ -110,10 +108,6 @@
 
 # Generating and deleting unused files to reduce images size
 $(DYNANYFILES): $(DYNAMIC_ANY.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(DYNANY_IDLJ_FLAGS) $(DYNAMIC_ANY.IDL)
-	$(RM) $(DYNANY_DIR)/*POA*
-	$(RM) $(DYNANY_DIR)/*Holder*
-	$(RM) $(DYNANYDELETEFILES)
 
 dynany.compile: $(DYNANYFILES)
 
@@ -125,12 +119,6 @@
 TR_IDLJ_FLAGS =-i "$(SRC_DIR)/org/omg/PortableInterceptor" -i "$(SRC_DIR)/org/omg/PortableServer" -i "$(SRC_DIR)/org/omg/CosTransactions"
 
 $(TRGENERATEDFILES):: $(COSTRANSACTIONS.IDL) $(COSTSINTEROP.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg -pkgPrefix CosTransactions org.omg $(COSTRANSACTIONS.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg -pkgPrefix CosTSInteroperation org.omg $(COSTSINTEROP.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fallTIE -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fall -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
-#	$(IDLJ) -td "$(GENSRCDIR)" $(TR_IDLJ_FLAGS) -D CORBA3 -corba 3.0 -fallTIE -pkgPrefix CORBA org.omg $(TRANSACTIONS.IDL)
 
 tr.compile: $(TRGENERATEDFILES)
 
@@ -144,7 +132,6 @@
 # _NamingContextImplBase.java and _BindingIteratorImplBase.java files
 # to GENSRC directory. Note that these two classes are deprecated.
 $(NSGENERATEDFILES): $(NAMESERVICE.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i $(NAMESERVICEDIR) -fall -pkgPrefix CosNaming org.omg $(NAMESERVICE.IDL)
 
 ns.compile: $(NSGENERATEDFILES)
 
@@ -156,8 +143,6 @@
 IOPDELETEFILES =    $(IOP_TO_DELETE_FILES:%=$(GENSRCDIR)/%)
 
 $(IOPGENERATEDFILES):: $(IOP.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 -D CORBA3 -pkgPrefix IOP org.omg $(IOP.IDL)
-	$(RM) -r $(IOPDELETEFILES)
 
 iop.compile: $(IOPGENERATEDFILES)
 
@@ -169,8 +154,6 @@
 CORBAXDUPLICATEFILES = $(CORBA_DUPLICATE_java:%=$(GENSRCDIR)/%)
 
 $(CORBAXGENERATEDFILES):: $(CORBAX.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 $(CORBAX.IDL)
-	$(RM) $(CORBAXDUPLICATEFILES)
 
 corbax.compile: $(CORBAXGENERATEDFILES)
 
@@ -181,7 +164,6 @@
 MESSAGINGGENERATEDFILES = $(Messaging_java:%=$(GENSRCDIR)/%)
 
 $(MESSAGINGGENERATEDFILES):: $(MESSAGING.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -corba 3.0 -pkgPrefix Messaging org.omg $(MESSAGING.IDL)
 
 messaging.compile: $(MESSAGINGGENERATEDFILES)
 
@@ -195,8 +177,6 @@
 PIHELHOLFILES = $(PI_GENERATED_HELP_HOL_java:%=$(GENSRCDIR)/%)
 
 $(PIGENERATEDFILES):: $(INTERCEPTORS.IDL)
-	$(IDLJ) -td "$(GENSRCDIR)" -i "$(SRC_DIR)/org/omg/PortableInterceptor" -i $(CORBA_IDL_DIR) -fall -pkgPrefix PortableInterceptor org.omg -pkgPrefix Dynamic org.omg -pkgPrefix IOP org.omg -corba 3.0 -D CORBA3 $(INTERCEPTORS.IDL)
-	$(RM) $(PIHELHOLFILES)
 
 pi.compile: $(PIGENERATEDFILES)
 
diff -Nru openjdk-ecj.orig/corba/make/sun/rmi/corbalogsources/Makefile openjdk-ecj/corba/make/sun/rmi/corbalogsources/Makefile
--- openjdk-ecj.orig/corba/make/sun/rmi/corbalogsources/Makefile	2013-10-04 15:45:38.000000000 +0100
+++ openjdk-ecj/corba/make/sun/rmi/corbalogsources/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -172,7 +172,6 @@
 ACTIVATIONFILES = $(com_sun_corba_se_spi_activation_java:%=$(GENSRCDIR)/%)
 
 $(ACTIVATIONFILES): $(ACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) -i $(ACTIVATIONFILEDIR) -fall -oldImplBase -pkgPrefix activation com.sun.corba.se.spi $(ACTIVATION.IDL)
 
 activation.idl.compile: $(ACTIVATIONFILES)
 
@@ -195,7 +194,6 @@
 
 # REVISIT: remove -oldImplBase
 $(PORTABLEACTIVATIONFILES): $(PORTABLEACTIVATION.IDL)
-	$(IDLJ) -td $(GENSRCDIR) $(PORTABLEACTIVATION_INCLUDES) $(PORTABLEACTIVATION_PKG_PREFIXES) -fall -oldImplBase -corba 3.0 -D CORBA3 $(PORTABLEACTIVATION.IDL)
 
 portableactivation.idl.compile: $(PORTABLEACTIVATIONFILES)
 
diff -Nru openjdk-ecj.orig/jaxp/build.xml openjdk-ecj/jaxp/build.xml
--- openjdk-ecj.orig/jaxp/build.xml	2013-10-04 15:50:12.000000000 +0100
+++ openjdk-ecj/jaxp/build.xml	2013-10-09 12:46:11.374453549 +0100
@@ -131,7 +131,8 @@
              memoryMaximumSize="${javac.memoryMaximumSize}"
              source="${javac.source}"
 	     debug="${javac.debug}"
-             target="${javac.target}">
+             target="${javac.target}"
+	     executable="${jdk.home}/bin/javac">
             <compilerarg value="-J-Xbootclasspath/p:${javac.jar}"/>
             <compilerarg line="${javac.version.opt} ${javac.lint.opts} ${javac.no.jdk.warnings}"/>
             <src refid="src.dir.id"/>
diff -Nru openjdk-ecj.orig/jaxws/build.xml openjdk-ecj/jaxws/build.xml
--- openjdk-ecj.orig/jaxws/build.xml	2013-10-04 15:51:17.000000000 +0100
+++ openjdk-ecj/jaxws/build.xml	2013-10-09 12:46:11.374453549 +0100
@@ -131,7 +131,8 @@
              memoryMaximumSize="${javac.memoryMaximumSize}"
              source="${javac.source}"
 	     debug="${javac.debug}"
-             target="${javac.target}">
+             target="${javac.target}"
+	     executable="${jdk.home}/bin/javac">
             <compilerarg value="-J-Xbootclasspath/p:${javac.jar}"/>
             <compilerarg line="${javac.version.opt} ${javac.lint.opts} ${javac.no.jdk.warnings}"/>
             <src refid="src.dir.id"/>
diff -Nru openjdk-ecj.orig/jdk/make/common/Release.gmk openjdk-ecj/jdk/make/common/Release.gmk
--- openjdk-ecj.orig/jdk/make/common/Release.gmk	2013-10-09 12:44:01.020450124 +0100
+++ openjdk-ecj/jdk/make/common/Release.gmk	2013-10-09 13:17:10.126995245 +0100
@@ -660,10 +660,23 @@
 $(RES_JAR_ARGLIST): $(RES_JAR_FILELIST)
 	$(prep-target)
 	$(SED) -e "s@^@-C $(CLASSBINDIR) @" $< > $@
-$(RESOURCES_JAR): $(RES_JAR_ARGLIST) $(JAR_MANIFEST_FILE)
+$(RESOURCES_JAR): \
+    $(if $(JAR_KNOWS_ATFILE),$(RES_JAR_FILELIST),$(RES_JAR_ARGLIST)) \
+    $(JAR_MANIFEST_FILE)
 	$(prep-target)
+ifneq (,$(JAR_KNOWS_ATFILE))
+	(cd $(CLASSBINDIR) && \
 	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS) $(JAR_MANIFEST_FILE) $@ \
-	    @$(RES_JAR_ARGLIST) $(JAR_JFLAGS)
+	    $(JAR_JFLAGS) @$(RES_JAR_FILELIST))
+else ifneq (,$(JAR_ACCEPTS_STDIN_LIST))
+	(cd $(CLASSBINDIR) && $(CAT) $(RES_JAR_FILELIST) | \
+	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS)@ $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS))
+else
+	(cd $(CLASSBINDIR) && \
+	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS) $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS) `cat $(RES_JAR_FILELIST)`)
+endif
 	@$(java-vm-cleanup)
 
 # Create jsse.jar containing SunJSSE implementation classes
@@ -719,10 +732,22 @@
 $(RT_JAR_ARGLIST): $(RT_JAR_FILELIST)
 	$(prep-target)
 	$(SED) -e "s@^@-C $(CLASSBINDIR) @" $< > $@
-$(RT_JAR): $(RT_JAR_ARGLIST) $(JAR_MANIFEST_FILE)
+$(RT_JAR): $(if $(JAR_KNOWS_ATFILE),$(RT_JAR_FILELIST),$(RT_JAR_ARGLIST)) \
+    $(JAR_MANIFEST_FILE)
 	$(prep-target)
+ifneq (,$(JAR_KNOWS_ATFILE))
+	(cd $(CLASSBINDIR) && \
 	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS) $(JAR_MANIFEST_FILE) $@ \
-	    @$(RT_JAR_ARGLIST) $(JAR_JFLAGS)
+	    $(JAR_JFLAGS) @$(RT_JAR_FILELIST))
+else ifneq (,$(JAR_ACCEPTS_STDIN_LIST))
+	(cd $(CLASSBINDIR) && $(CAT) $(RT_JAR_FILELIST) | \
+	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS)@ $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS))
+else
+	(cd $(CLASSBINDIR) && \
+	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS) $(JAR_MANIFEST_FILE) $@ \
+	    $(JAR_JFLAGS) `$(CAT) $(RT_JAR_FILELIST)`)
+endif
 	@$(java-vm-cleanup)
 
 # Meta-index construction to make core class loaders lazier
@@ -969,19 +994,6 @@
 	@$(java-vm-cleanup)
 	$(CP) $(LIBDIR)/tools.jar $(JDK_IMAGE_DIR)/lib/tools.jar
 	@#
-	@# lib/ct.sym
-	@#
-	$(MKDIR) -p $(OUTPUTDIR)/symbols/META-INF/sym
-	$(JAVAC_CMD) -XDprocess.packages -proc:only \
-	    -processor com.sun.tools.javac.sym.CreateSymbols \
-	    -Acom.sun.tools.javac.sym.Jar=$(RT_JAR) \
-	    -Acom.sun.tools.javac.sym.Dest=$(OUTPUTDIR)/symbols/META-INF/sym/rt.jar \
-	    $(CORE_PKGS) $(NON_CORE_PKGS) $(EXCLUDE_PROPWARN_PKGS)
-	$(BOOT_JAR_CMD) $(CREATE_JAR_OPTS_NOMANIFEST) $(LIBDIR)/ct.sym \
-	    -C $(OUTPUTDIR)/symbols META-INF $(JAR_JFLAGS)
-	@$(java-vm-cleanup)
-	$(CP) $(LIBDIR)/ct.sym $(JDK_IMAGE_DIR)/lib/ct.sym
-	@#
 	@# CORBA supported orb.idl and ir.idl should be copied to lib
 	@#
 	$(CP) $(LIBDIR)/orb.idl $(JDK_IMAGE_DIR)/lib/orb.idl
@@ -1050,16 +1062,6 @@
 	$(CP) $(PLATFORM_SRC)/bin/java_md.h $(JDK_IMAGE_DIR)/src/launcher
 	$(CD) $(JDK_IMAGE_DIR)/src && $(ZIPEXE) -qr ../src.zip *
 	$(RM) -r $(JDK_IMAGE_DIR)/src
-	@#
-	@# demo, include
-	@#
-	$(CP) -r -f $(DEMODIR) $(JDK_IMAGE_DIR)
-	$(CP) -r -f $(SAMPLEDIR) $(JDK_IMAGE_DIR)
-	$(CP) -r $(INCLUDEDIR) $(JDK_IMAGE_DIR)
-	@#
-	@# Swing BeanInfo generation
-	@#
-	$(CD) javax/swing/beaninfo && $(MAKE) swing-1.2-beans
 ifneq ($(PLATFORM), windows)
 	$(call copy-man-pages,$(JDK_IMAGE_DIR),$(JDK_MAN_PAGES))
 endif # !windows
diff -Nru openjdk-ecj.orig/jdk/make/common/Rules.gmk openjdk-ecj/jdk/make/common/Rules.gmk
--- openjdk-ecj.orig/jdk/make/common/Rules.gmk	2013-10-04 15:55:30.000000000 +0100
+++ openjdk-ecj/jdk/make/common/Rules.gmk	2013-10-09 12:46:11.374453549 +0100
@@ -302,6 +302,8 @@
 	$(JAVAH_CMD) -d $(CLASSHDRDIR)/ \
 		$(CLASSES.export) $(subst $$,\$$,$(EXPORTED_inner))
 	@$(java-vm-cleanup)
+	if [ -e $(CLASSHDRDIR)/java_lang_ClassLoader\$$NativeLibrary.h ] ; then mv $(CLASSHDRDIR)/java_lang_ClassLoader\$$NativeLibrary.h \
+	  $(CLASSHDRDIR)/java_lang_ClassLoader_NativeLibrary.h ; fi
 	@$(TOUCH) $@
 
 classheaders.clean:
diff -Nru openjdk-ecj.orig/jdk/make/java/nio/Makefile openjdk-ecj/jdk/make/java/nio/Makefile
--- openjdk-ecj.orig/jdk/make/java/nio/Makefile	2013-10-09 12:43:55.072358704 +0100
+++ openjdk-ecj/jdk/make/java/nio/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -31,7 +31,7 @@
 PACKAGE = java.nio
 LIBRARY = nio
 PRODUCT = java
-OTHER_JAVACFLAGS += -Xmaxwarns 1000 -Xlint:serial -Werror
+OTHER_JAVACFLAGS += -Xlint:serial -Werror
 include $(BUILDDIR)/common/Defs.gmk
 
 NIO_SRC = $(SHARE_SRC)/classes/java/nio
diff -Nru openjdk-ecj.orig/jdk/make/Makefile openjdk-ecj/jdk/make/Makefile
--- openjdk-ecj.orig/jdk/make/Makefile	2013-10-04 15:55:30.000000000 +0100
+++ openjdk-ecj/jdk/make/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -247,7 +247,7 @@
 
 all build:: sanity-all post-sanity-all
 
-SUBDIRS    = tools java javax org sun sunw com jpda mkdemo mksample launchers
+SUBDIRS    = tools java javax org sun sunw com jpda mksample launchers
 all build::
 	$(SUBDIRS-loop)
 
diff -Nru openjdk-ecj.orig/jdk/make/sun/awt/Makefile openjdk-ecj/jdk/make/sun/awt/Makefile
--- openjdk-ecj.orig/jdk/make/sun/awt/Makefile	2013-10-09 12:43:59.532427253 +0100
+++ openjdk-ecj/jdk/make/sun/awt/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -434,10 +434,9 @@
 COMPILEFONTCONFIG_JARFILE = $(BUILDTOOLJARDIR)/compilefontconfig.jar
 
 $(LIBDIR)/%.bfc: $(FONTCONFIGS_SRC)/$(FONTCONFIGS_SRC_PREFIX)%.properties \
-    $(COMPILEFONTCONFIG_JARFILE)
-	$(prep-target)
-	$(BOOT_JAVA_CMD) -jar $(COMPILEFONTCONFIG_JARFILE) $< $@
-	$(CHMOD) 444 $(@)
+	$(COMPILEFONTCONFIG_JARFILE)
+	$(CP) -f $(GENSRCDIR)/fontconfig/* $(LIBDIR)
+	$(CHMOD) 444 $(LIBDIR)/*.bfc
 	@$(java-vm-cleanup)
 
 fontconfigs.clean :
diff -Nru openjdk-ecj.orig/jdk/make/sun/xawt/Makefile openjdk-ecj/jdk/make/sun/xawt/Makefile
--- openjdk-ecj.orig/jdk/make/sun/xawt/Makefile	2013-10-09 12:44:01.268453936 +0100
+++ openjdk-ecj/jdk/make/sun/xawt/Makefile	2013-10-09 12:46:11.374453549 +0100
@@ -301,11 +301,7 @@
 
 TEMPDIR_CLASSES = $(TEMPDIR)/classes
 
-$(TEMPDIR_CLASSES)/sun/awt/X11/ToBin.class: ToBin.java
-	@$(prep-target)
-	$(BOOT_JAVAC_CMD) -d $(TEMPDIR_CLASSES) $<
-
-$(TEMPDIR)/.gen_icons: $(TEMPDIR_CLASSES)/sun/awt/X11/ToBin.class $(ICONS)
+$(TEMPDIR)/.gen_icons: $(ICONS)
 	$(prep-target)
 	for i in $(ICONS); do \
             filename=`basename $$i`; \
@@ -315,22 +311,14 @@
 	    $(ECHO) "package sun.awt.X11;" >> $$classname ; \
 	    $(ECHO) "public class XAWTIcon32_$$name {" >> $$classname; \
 	    $(ECHO) "public static int[] $$name = { " >> $$classname;  \
-	    $(CAT) $$i | \
-	      $(BOOT_JAVA_CMD) -cp $(TEMPDIR_CLASSES)  \
-		-Dawt.toolkit=sun.awt.motif.MToolkit \
-		-Djava.awt.headless=true \
-		sun.awt.X11.ToBin >> $$classname; \
+	    $(ECHO) "0,0" >> $$classname ;  \
 	    $(ECHO) "}; }" >> $$classname;  \
-            classname=$(GEN_DIR)/XAWTIcon64_$$name.java; \
+	    classname=$(GEN_DIR)/XAWTIcon64_$$name.java; \
 	    $(RM) $$classname; \
 	    $(ECHO) "package sun.awt.X11;" >> $$classname ; \
 	    $(ECHO) "public class XAWTIcon64_$$name {" >> $$classname; \
 	    $(ECHO) "public static long[] $$name = { " >> $$classname;  \
-	    $(CAT) $$i | \
-	      $(BOOT_JAVA_CMD) -cp $(TEMPDIR_CLASSES)  \
-		-Dawt.toolkit=sun.awt.motif.MToolkit \
-		-Djava.awt.headless=true \
-		sun.awt.X11.ToBin >> $$classname; \
+	    $(ECHO) "0,0" >> $$classname ; \
 	    $(ECHO) "}; }" >> $$classname;  \
 	done
 	$(TOUCH) $@
diff -Nru openjdk-ecj.orig/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java openjdk-ecj/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java
--- openjdk-ecj.orig/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java	2013-10-04 15:55:31.000000000 +0100
+++ openjdk-ecj/jdk/make/tools/src/build/tools/generatecharacter/GenerateCharacter.java	2013-10-09 12:46:11.374453549 +0100
@@ -647,9 +647,6 @@
             throws FileNotFoundException, IOException {
         BufferedReader in = new BufferedReader(new FileReader(theTemplateFileName));
         PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(theOutputFileName)));
-        out.println(commentStart +
-            " This file was generated AUTOMATICALLY from a template file " +
-            new java.util.Date() + commentEnd);
         int marklen = commandMarker.length();
         LOOP: while(true) {
             try {
@@ -876,7 +873,6 @@
         // liu : Add a comment showing the source of this table
         result.append(commentStart + " The following tables and code generated using:" +
                   commentEnd + "\n  ");
-        result.append(commentStart + ' ' + commandLineDescription + commentEnd + "\n  ");
 
                 if (plane == 0 && bLatin1 == false) {
             genCaseMapTableDeclaration(result);
diff -Nru openjdk-ecj.orig/langtools/make/build.properties openjdk-ecj/langtools/make/build.properties
--- openjdk-ecj.orig/langtools/make/build.properties	2013-10-04 15:55:57.000000000 +0100
+++ openjdk-ecj/langtools/make/build.properties	2013-10-09 12:46:11.374453549 +0100
@@ -68,7 +68,7 @@
 # set the following to -version to verify the versions of javac being used
 javac.version.opt =
 # in time, there should be no exceptions to -Xlint:all
-javac.lint.opts = -Xlint:all,-unchecked,-deprecation,-fallthrough,-cast,-serial -Werror
+javac.lint.opts = -Xlint:all,-unchecked,-deprecation,-fallthrough,-cast,-serial
 
 # options for the <javadoc> task for javac
 javadoc.jls3.url=http://java.sun.com/docs/books/jls/
