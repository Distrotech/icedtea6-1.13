# HG changeset patch
# User andrew
# Date 1437347486 -3600
#      Mon Jul 20 00:11:26 2015 +0100
# Node ID c1787ebf3df9ed96cd93bbd533ccf066418ade8a
# Parent  ff3cd846027abce97fe5e7cc5a1df16fa6e5afc8
PR2488: Make jdk8 mode the default for jdk.tls.ephemeralDHKeySize
Summary: Backout 45680a70921daf8a5929b890de22c2fa5d117d82

diff -r ff3cd846027a -r c1787ebf3df9 src/share/classes/sun/security/ssl/ServerHandshaker.java
--- openjdk/jdk/src/share/classes/sun/security/ssl/ServerHandshaker.java	Sun Jul 19 18:19:29 2015 +0100
+++ openjdk/jdk/src/share/classes/sun/security/ssl/ServerHandshaker.java	Mon Jul 20 00:11:26 2015 +0100
@@ -120,15 +120,15 @@
         String property = AccessController.doPrivileged(
                     new GetPropertyAction("jdk.tls.ephemeralDHKeySize"));
         if (property == null || property.length() == 0) {
-            useLegacyEphemeralDHKeys = true;
+            useLegacyEphemeralDHKeys = false;
             useSmartEphemeralDHKeys = false;
             customizedDHKeySize = -1;
         } else if ("matched".equals(property)) {
             useLegacyEphemeralDHKeys = false;
             useSmartEphemeralDHKeys = true;
             customizedDHKeySize = -1;
-        } else if ("jdk8".equals(property)) {
-            useLegacyEphemeralDHKeys = false;
+        } else if ("legacy".equals(property)) {
+            useLegacyEphemeralDHKeys = true;
             useSmartEphemeralDHKeys = false;
             customizedDHKeySize = -1;
         } else {
@@ -1253,14 +1253,15 @@
          * 768 bits ephemeral DH private keys were used to be used in
          * ServerKeyExchange except that exportable ciphers max out at 512
          * bits modulus values. We still adhere to this behavior in legacy
-         * mode (system property "jdk.tls.ephemeralDHKeySize"
+         * mode (system property "jdk.tls.ephemeralDHKeySize" is defined
+         * as "legacy").
+         *
+         * Older versions of OpenJDK don't support DH keys bigger
+         * than 1024 bits. We have to consider the compatibility requirement.
+         * 1024 bits DH key is always used for non-exportable cipher suites
+         * in default mode (system property "jdk.tls.ephemeralDHKeySize"
          * is not defined).
          *
-         * New JDK (JDK 8 and later) releases use a 1024 bit DH key for
-         * non-exportable cipher suites in default mode and this can
-         * be enabled when the system property "jdk.tls.ephemeralDHKeySize"
-         * is defined as "jdk8".
-         *
          * However, if applications want more stronger strength, setting
          * system property "jdk.tls.ephemeralDHKeySize" to "matched"
          * is a workaround to use ephemeral DH key which size matches the
